tabla,columna,tipo_dato,es_nulo
aplicadores_operarios,id,uuid,NO
aplicadores_operarios,nombre,text,NO
aplicadores_operarios,cuit,text,SI
aplicadores_operarios,telefono,text,SI
aplicadores_operarios,rol,text,SI
aplicadores_operarios,finca_id,bigint,SI
aplicadores_operarios,usuario_id,uuid,SI
aplicadores_operarios,created_at,timestamp with time zone,SI
aplicadores_operarios,apellido,text,SI
aplicadores_operarios,direccion,text,SI
cuartel_variedades,cuartel_id,bigint,NO
cuartel_variedades,variedad_id,uuid,NO
cuarteles,id,bigint,NO
cuarteles,finca_id,bigint,SI
cuarteles,superficie,numeric,SI
cuarteles,nro_viñedo,text,SI
cuarteles,provincia,text,SI
cuarteles,departamento,text,SI
cuarteles,created_at,timestamp with time zone,SI
cuarteles,nombre,text,NO
cuarteles,especie,text,SI
cuarteles,especie_id,uuid,SI
cuarteles,variedad,text,SI
cuarteles_completos,id,bigint,SI
cuarteles_completos,nombre,text,SI
cuarteles_completos,superficie,numeric,SI
cuarteles_completos,nro_viñedo,text,SI
cuarteles_completos,especie_texto,text,SI
cuarteles_completos,especie_nombre,text,SI
cuarteles_completos,especie_id,uuid,SI
cuarteles_completos,nombre_finca,text,SI
cuarteles_completos,finca_id,bigint,SI
cuarteles_completos,created_at,timestamp with time zone,SI
especies,id,uuid,NO
especies,nombre,text,NO
fertilizantes,id,uuid,NO
fertilizantes,producto,text,SI
fertilizantes,formula,text,SI
fertilizantes,n,numeric,SI
fertilizantes,p,numeric,SI
fertilizantes,k,numeric,SI
fertilizantes,ca,numeric,SI
fertilizantes,mg,numeric,SI
fertilizantes,s,numeric,SI
fertilizantes,fe,numeric,SI
fertilizantes,mn,numeric,SI
fertilizantes,zn,numeric,SI
fertilizantes,cu,numeric,SI
fertilizantes,bo,numeric,SI
fertilizantes,mo,numeric,SI
fertilizantes,cl,numeric,SI
fertilizantes,ph,text,SI
fertilizantes,otro,text,SI
fertilizaciones,id,bigint,NO
fertilizaciones,usuario_id,uuid,NO
fertilizaciones,finca_id,bigint,NO
fertilizaciones,cuartel_id,bigint,NO
fertilizaciones,fertilizante_id,bigint,NO
fertilizaciones,fecha,date,NO
fertilizaciones,dosis,numeric,NO
fertilizaciones,unidad_dosis,character varying,NO
fertilizaciones,metodo_aplicacion,character varying,NO
fertilizaciones,sistema_aplicacion,character varying,SI
fertilizaciones,superficie_aplicada,numeric,SI
fertilizaciones,operador_id,uuid,SI
fertilizaciones,equipo_trabajadores,text,SI
fertilizaciones,costo_total,numeric,SI
fertilizaciones,clima,character varying,SI
fertilizaciones,humedad_suelo,character varying,SI
fertilizaciones,observaciones,text,SI
fertilizaciones,created_at,timestamp with time zone,SI
fertilizaciones,updated_at,timestamp with time zone,SI
fertilizaciones,dosis_referencia,numeric,SI
fertilizaciones,unidad_dosis_referencia,character varying,SI
fertilizaciones,cantidad_aplicada,numeric,SI
fertilizaciones,unidad_cantidad,character varying,SI
fertilizaciones,superficie_cuartel,numeric,SI
fertilizaciones,dosis_real_calculada,numeric,SI
fincas,id,bigint,NO
fincas,nombre_finca,text,NO
fincas,usuario_id,uuid,SI
fincas,created_at,timestamp with time zone,SI
fincas,direccion,text,SI
fincas,superficie,numeric,SI
fincas,provincia,text,SI
fincas,departamento,text,SI
fitosanitarios,id,bigint,NO
fitosanitarios,nombre_comercial,text,NO
fitosanitarios,principio_activo,text,SI
fitosanitarios,formulacion,text,SI
fitosanitarios,plaga_o_enfermedad,text,SI
fitosanitarios,accion,text,SI
fitosanitarios,tc_tiempo_carencia,text,SI
fitosanitarios,ct,text,SI
fitosanitarios,dosis_marbete,text,SI
fitosanitarios,unidad_marbete,text,SI
fitosanitarios,lmr_senasa,text,SI
fitosanitarios,lmr_eu,text,SI
fitosanitarios,uso,text,SI
fitosanitarios,dosis_frecuente_100l,text,SI
fitosanitarios,registro_para,text,SI
metodos_de_aplicacion,id,integer,NO
metodos_de_aplicacion,nombre,text,NO
metodos_de_aplicacion,descripcion,text,SI
operario_finca,operario_id,uuid,NO
operario_finca,finca_id,bigint,NO
operario_finca,estado,text,NO
organizaciones,id,uuid,NO
organizaciones,nombre,text,NO
organizaciones,logo_url,text,SI
organizaciones,color_base,text,SI
riegos,id,bigint,NO
riegos,finca_id,bigint,SI
riegos,cuartel_id,bigint,SI
riegos,variedad,text,SI
riegos,especie,text,SI
riegos,labores,text,SI
riegos,operador_id,uuid,SI
riegos,fecha,date,SI
riegos,maquinaria,text,SI
riegos,horas_riego,numeric,SI
riegos,volumen_agua,numeric,SI
riegos,observaciones,text,SI
riegos,created_at,timestamp with time zone,SI
riegos,labor,text,SI
riegos,objetivo,text,SI
tareas,id,bigint,NO
tareas,tipo_tarea_old,text,SI
tareas,fecha,date,SI
tareas,cuartel_id,bigint,SI
tareas,duracion,integer,SI
tareas,cant_agua,integer,SI
tareas,obs,text,SI
tareas,created_at,timestamp with time zone,SI
tareas,tipo_tarea_id,integer,SI
tipos_tarea,id,integer,NO
tipos_tarea,nombre,text,NO
tipos_tarea,requiere_duracion,boolean,SI
tipos_tarea,requiere_agua,boolean,SI
tipos_tarea,requiere_obs,boolean,SI
usuarios,id,uuid,NO
usuarios,nombre,text,SI
usuarios,cuit,text,SI
usuarios,telefono,text,SI
usuarios,rol,text,SI
usuarios,created_at,timestamp with time zone,SI
usuarios,organizacion_id,uuid,SI
usuarios,email,text,SI
variedades,id,uuid,NO
variedades,nombre,text,NO
variedades,color,text,SI
variedades,tipo_destino,text,SI
variedades,especie_id,uuid,SI
visitas,id,integer,NO
visitas,fecha,timestamp without time zone,NO
visitas,texto,text,NO
visitas,id_productor,uuid,NO
visitas,id_finca,bigint,SI
visitas,id_cuartel,bigint,SI
visitas,id_ingeniero,uuid,NO
visitas,adjuntos,jsonb,SI
visitas,enviado_mail,boolean,SI

# FUNCIONES SQL DISPONIBLES

## Funciones de Cuarteles
CREATE OR REPLACE FUNCTION actualizar_cuartel(
    cuartel_id BIGINT,
    nueva_finca_id BIGINT,
    nuevo_nombre TEXT,
    nueva_superficie NUMERIC,
    nuevo_nro_vinedo TEXT,
    nueva_especie TEXT,
    nueva_especie_id UUID
) RETURNS RECORD AS $$
BEGIN
    -- Log para debugging
    RAISE NOTICE 'Actualizando cuartel: %, finca: %, nombre: %', cuartel_id, nueva_finca_id, nuevo_nombre;
    
    -- Realizar actualización
    UPDATE cuarteles 
    SET 
        finca_id = nueva_finca_id,
        nombre = nuevo_nombre,
        superficie = nueva_superficie,
        nro_viñedo = nuevo_nro_vinedo,
        especie = nueva_especie,
        especie_id = nueva_especie_id
    WHERE cuarteles.id = cuartel_id;
    
    -- Verificar si se actualizó
    IF NOT FOUND THEN
        RAISE EXCEPTION 'No se encontró el cuartel con ID: %', cuartel_id;
    END IF;
    
    -- Retornar el registro actualizado
    RETURN QUERY
    SELECT c.id, c.nombre, c.finca_id, c.superficie, c.nro_viñedo, c.especie, c.especie_id
    FROM cuarteles c
    WHERE c.id = cuartel_id;
END;
$$ LANGUAGE plpgsql;

## Funciones de Especies
CREATE OR REPLACE FUNCTION actualizar_especie(
    especie_id UUID,
    nuevo_nombre TEXT
) RETURNS RECORD AS $$
BEGIN
    -- Log para debugging
    RAISE NOTICE 'Actualizando especie: %, nombre: %', especie_id, nuevo_nombre;
    
    -- Realizar actualización
    UPDATE especies 
    SET nombre = nuevo_nombre
    WHERE especies.id = especie_id;
    
    -- Verificar si se actualizó
    IF NOT FOUND THEN
        RAISE EXCEPTION 'No se encontró la especie con ID: %', especie_id;
    END IF;
    
    -- Retornar el registro actualizado
    RETURN QUERY
    SELECT e.id, e.nombre
    FROM especies e
    WHERE e.id = especie_id;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION eliminar_especie(
    especie_id UUID
) RETURNS BOOLEAN AS $$
BEGIN
    -- Log para debugging
    RAISE NOTICE 'Eliminando especie: %', especie_id;
    
    -- Verificar si tiene variedades asociadas
    IF EXISTS (SELECT 1 FROM variedades WHERE especie_id = especie_id) THEN
        RAISE EXCEPTION 'No se puede eliminar la especie porque tiene variedades asociadas';
    END IF;
    
    -- Eliminar el registro
    DELETE FROM especies WHERE id = especie_id;
    
    -- Verificar si se eliminó
    IF NOT FOUND THEN
        RAISE EXCEPTION 'No se encontró la especie con ID: %', especie_id;
    END IF;
    
    RETURN TRUE;
END;
$$ LANGUAGE plpgsql;

## Funciones de Variedades
CREATE OR REPLACE FUNCTION actualizar_variedad(
    variedad_id UUID,
    nueva_especie_id UUID,
    nuevo_nombre TEXT,
    nuevo_color TEXT,
    nuevo_tipo_destino TEXT
) RETURNS RECORD AS $$
BEGIN
    -- Log para debugging
    RAISE NOTICE 'Actualizando variedad: %, especie: %, nombre: %', variedad_id, nueva_especie_id, nuevo_nombre;
    
    -- Realizar actualización
    UPDATE variedades 
    SET 
        especie_id = nueva_especie_id,
        nombre = nuevo_nombre,
        color = nuevo_color,
        tipo_destino = nuevo_tipo_destino
    WHERE variedades.id = variedad_id;
    
    -- Verificar si se actualizó
    IF NOT FOUND THEN
        RAISE EXCEPTION 'No se encontró la variedad con ID: %', variedad_id;
    END IF;
    
    -- Retornar el registro actualizado
    RETURN QUERY
    SELECT v.id, v.nombre, v.especie_id, v.color, v.tipo_destino
    FROM variedades v
    WHERE v.id = variedad_id;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION eliminar_variedad(
    variedad_id UUID
) RETURNS BOOLEAN AS $$
BEGIN
    -- Log para debugging
    RAISE NOTICE 'Eliminando variedad: %', variedad_id;
    
    -- Eliminar el registro
    DELETE FROM variedades WHERE id = variedad_id;
    
    -- Verificar si se eliminó
    IF NOT FOUND THEN
        RAISE EXCEPTION 'No se encontró la variedad con ID: %', variedad_id;
    END IF;
    
    RETURN TRUE;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION get_variedades_por_especie(
    especie_id_param UUID
) RETURNS TABLE(id UUID, nombre TEXT, color TEXT, tipo_destino TEXT) AS $$
BEGIN
    RETURN QUERY
    SELECT v.id, v.nombre, v.color, v.tipo_destino
    FROM variedades v
    WHERE v.especie_id = especie_id_param
    ORDER BY v.nombre;
END;
$$ LANGUAGE plpgsql;

## Funciones de Usuarios y Autenticación
CREATE OR REPLACE FUNCTION get_user_role(user_id UUID) RETURNS TEXT AS $$
    SELECT rol FROM public.usuarios WHERE id = user_id;
$$ LANGUAGE SQL;

CREATE OR REPLACE FUNCTION handle_new_user() RETURNS TRIGGER AS $$
BEGIN
  INSERT INTO public.usuarios (id, nombre, rol, organizacion_id)
  VALUES (
    NEW.id,
    COALESCE(NEW.email, 'sin_email_' || NEW.id),
    'productor',
    (SELECT id FROM public.organizaciones LIMIT 1)
  )
  ON CONFLICT (id) DO NOTHING;

  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION insertar_usuario_auth() RETURNS TRIGGER AS $$
BEGIN
  INSERT INTO usuarios (id, email, rol)
  VALUES (NEW.id, NEW.email, 'productor');
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION set_finca_user() RETURNS TRIGGER AS $$
BEGIN
  NEW.usuario_id := auth.uid();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

## Funciones de Reportes
CREATE OR REPLACE FUNCTION reporte_tareas_resumen()
RETURNS TABLE(cuartel_id BIGINT, tipo TEXT, total BIGINT) AS $$
BEGIN
  RETURN QUERY
    SELECT cuartel_id, tipo_tarea_id::text AS tipo, COUNT(*) AS total
    FROM public.tareas
    GROUP BY cuartel_id, tipo_tarea_id;
END;
$$ LANGUAGE plpgsql;
# EJEMPLOS DE USO DE FUNCIONES SQL

## Cuarteles
-- Actualizar un cuartel completo
SELECT * FROM actualizar_cuartel(
    1, -- cuartel_id
    1, -- nueva_finca_id
    'Cuartel Norte Renovado', -- nuevo_nombre
    25.5, -- nueva_superficie
    'V001', -- nuevo_nro_vinedo
    'Uva', -- nueva_especie
    'uuid-de-especie-uva' -- nueva_especie_id
);

## Especies
-- Actualizar nombre de especie
SELECT * FROM actualizar_especie('uuid-especie', 'Nuevo Nombre Especie');

-- Eliminar especie (solo si no tiene variedades)
SELECT eliminar_especie('uuid-especie');

## Variedades
-- Obtener variedades de una especie
SELECT * FROM get_variedades_por_especie('uuid-especie-uva');

-- Actualizar variedad completa
SELECT * FROM actualizar_variedad(
    'uuid-variedad', -- variedad_id
    'uuid-especie', -- nueva_especie_id
    'Malbec Premium', -- nuevo_nombre
    'Tinto', -- nuevo_color
    'Vino de guarda' -- nuevo_tipo_destino
);

-- Eliminar variedad
SELECT eliminar_variedad('uuid-variedad');

## Usuarios
-- Obtener rol de usuario
SELECT get_user_role('uuid-usuario');

## Reportes
-- Resumen de tareas por cuartel y tipo
SELECT * FROM reporte_tareas_resumen();

# Ejemplos de consultas útiles para reportes y auditoría

-- Resumen de tareas por finca y tipo
SELECT finca_id, tipo_tarea_id::text AS tipo, COUNT(*) AS total
FROM tareas
GROUP BY finca_id, tipo_tarea_id;

-- Riegos por operador y fecha
SELECT operador_id, fecha, COUNT(*) AS total
FROM riegos
GROUP BY operador_id, fecha
ORDER BY fecha DESC;

-- Aplicaciones de agroquímicos por cuartel y producto
SELECT cuartel_id, producto, COUNT(*) AS aplicaciones
FROM aplicaciones_agroquimicos
GROUP BY cuartel_id, producto;

-- Fertilizaciones por cuartel y tipo de fertilizante
SELECT cuartel_id, producto, COUNT(*) AS fertilizaciones
FROM fertilizaciones
GROUP BY cuartel_id, producto;

-- Labores de suelo por cuartel y operador
SELECT cuartel_id, operador_id, COUNT(*) AS labores
FROM labores
GROUP BY cuartel_id, operador_id;

# FUTURA TAREA
- Revisar y agregar funciones SQL específicas para reportes y auditoría al final del proyecto, según necesidades reales de gestión y certificación.
- Implementar funciones para manejo de aplicaciones de agroquímicos y fertilizaciones
- Crear funciones de validación de datos y restricciones de negocio
- Desarrollar funciones para cálculos de superficies y rendimientos
labores_suelo,id,uuid,NO
labores_suelo,fecha,timestamp with time zone,NO
labores_suelo,finca_id,bigint,NO
labores_suelo,cuartel_id,bigint,NO
labores_suelo,tipo_labor,text,NO
labores_suelo,objetivo,text,NO
labores_suelo,tiempo_horas,numeric,SI
labores_suelo,operador_id,uuid,NO
labores_suelo,maquinaria,text,SI
labores_suelo,superficie_hectareas,numeric,SI
labores_suelo,costo,numeric,SI
labores_suelo,resultado,text,SI
labores_suelo,observaciones,text,SI
labores_suelo,usuario_id,uuid,NO
labores_suelo,created_at,timestamp with time zone,SI
labores_suelo,updated_at,timestamp with time zone,SI
